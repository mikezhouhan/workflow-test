name: Build and Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g. v1.0.0)'
        required: true
        default: 'v0.0.1'
  push:
    tags:
      - v*.*.*

permissions:
  contents: write

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest] # Removed ubuntu-latest
      fail-fast: false

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Get release tag
        id: get-tag
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Get npm cache directory path
        id: npm-cache-dir-path
        run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.npm-cache-dir-path.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install Dependencies
        run: npm install --legacy-peer-deps # Added --legacy-peer-deps based on common Electron/Vite project needs, remove if not necessary

      # Removed Build Linux step

      - name: Build Mac
        if: matrix.os == 'macos-latest'
        run: npm run package-mac
        env:
        #   CSC_LINK: ${{ secrets.CSC_LINK }}
        #   CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
        #   APPLE_ID: ${{ vars.APPLE_ID }}
        #   APPLE_APP_SPECIFIC_PASSWORD: ${{ vars.APPLE_APP_SPECIFIC_PASSWORD }}
        #   APPLE_TEAM_ID: ${{ vars.APPLE_TEAM_ID }}
        #   RENDERER_VITE_AIHUBMIX_SECRET: ${{ vars.RENDERER_VITE_AIHUBMIX_SECRET }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: npm run package-win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          draft: true
          allowUpdates: true
          makeLatest: false
          tag: ${{ steps.get-tag.outputs.tag }}
          artifacts: 'release/*.exe,release/*.zip,release/*.dmg,release/latest*.yml,release/*.blockmap' # Removed release/*.AppImage
          token: ${{ secrets.GITHUB_TOKEN }}